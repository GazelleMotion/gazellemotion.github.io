{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\r\n  defineDocumentType,\r\n  makeSource,\r\n  ComputedFields,\r\n} from \"contentlayer/source-files\"; // eslint-disable-line\r\nimport rehypePrism from \"rehype-prism-plus\";\r\nimport codeTitle from \"remark-code-titles\";\r\n\r\nconst getSlug = (doc: any) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\");\r\n\r\nconst postComputedFields: ComputedFields = {\r\n  slug: {\r\n    type: \"string\",\r\n    resolve: (doc) => getSlug(doc),\r\n  },\r\n  image: {\r\n    type: \"string\",\r\n    resolve: (doc) => `/blog/${getSlug(doc)}/image.png`,\r\n  },\r\n  og: {\r\n    type: \"string\",\r\n    resolve: (doc) => `/blog/${getSlug(doc)}/og.jpg`,\r\n  },\r\n};\r\n\r\nexport const Post = defineDocumentType(() => ({\r\n  name: \"Post\",\r\n  filePathPattern: `blog/**/*.mdx`,\r\n  contentType: \"mdx\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    summary: { type: \"string\", required: true },\r\n    publishedAt: { type: \"string\", required: true },\r\n    updatedAt: { type: \"string\", required: false },\r\n    tags: { type: \"json\", required: false },\r\n  },\r\n  computedFields: postComputedFields,\r\n}));\r\n\r\nconst projectComputedFields: ComputedFields = {\r\n  slug: {\r\n    type: \"string\",\r\n    resolve: (doc) => getSlug(doc),\r\n  },\r\n};\r\n\r\nexport const Project = defineDocumentType(() => ({\r\n  name: \"Project\",\r\n  filePathPattern: `project/**/*.mdx`,\r\n  contentType: \"mdx\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    description: { type: \"string\", required: true },\r\n    time: { type: \"string\", required: true },\r\n    url: { type: \"string\", required: false },\r\n  },\r\n  computedFields: projectComputedFields,\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: \"data\",\r\n  documentTypes: [Post, Project],\r\n  mdx: {\r\n    rehypePlugins: [rehypePrism],\r\n    remarkPlugins: [codeTitle],\r\n  },\r\n});\r\n"],
  "mappings": ";AAAA;AAAA,EACE;AAAA,EACA;AAAA,OAEK;AACP,OAAO,iBAAiB;AACxB,OAAO,eAAe;AAEtB,IAAM,UAAU,CAAC,QAAa,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAE1E,IAAM,qBAAqC;AAAA,EACzC,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,QAAQ,GAAG;AAAA,EAC/B;AAAA,EACA,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,SAAS,QAAQ,GAAG;AAAA,EACxC;AAAA,EACA,IAAI;AAAA,IACF,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,SAAS,QAAQ,GAAG;AAAA,EACxC;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,WAAW,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC7C,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACxC;AAAA,EACA,gBAAgB;AAClB,EAAE;AAEF,IAAM,wBAAwC;AAAA,EAC5C,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,QAAQ,GAAG;AAAA,EAC/B;AACF;AAEO,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,KAAK,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,EACzC;AAAA,EACA,gBAAgB;AAClB,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,OAAO;AAAA,EAC7B,KAAK;AAAA,IACH,eAAe,CAAC,WAAW;AAAA,IAC3B,eAAe,CAAC,SAAS;AAAA,EAC3B;AACF,CAAC;",
  "names": []
}
